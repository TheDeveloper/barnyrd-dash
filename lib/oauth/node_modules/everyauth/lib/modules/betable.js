var oauthModule = require('./oauth2');

var github = module.exports =
oauthModule.submodule('betable')
  .configurable({
      scope: 'specify types of access' })
  .oauthHost('http://developers.betable.com')
  .apiHost('http://developers.betable.com')
  .authPath('/oauth/authorize')
  .accessTokenPath('/oauth/token.js')
  .entryPath('/auth/betable')
  .callbackPath('/auth/betable/callback')
  .authQueryParam('scope', function () {
    return this._scope && this.scope(); })
  .handleAuthCallbackError( function (req, res) {
    var parsedUrl = url.parse(req.url, true)
      , errorDesc = parsedUrl.query.error_description;
    throw new Exception(parsedUrl.query.error_description);
  })
  .fetchOAuthUser( function (accessToken) {
    console.log("cool")
    var p = this.Promise();
    this.oauth.get(this.apiHost() + '/api/v10/user', accessToken, function (err, data) {
      if (err) return p.fail(err);
      console.log(data)
      var oauthUser = JSON.parse(data).user;
      p.fulfill(oauthUser);
    });
    return p; });
